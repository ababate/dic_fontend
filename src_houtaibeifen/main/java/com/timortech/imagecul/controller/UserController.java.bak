package com.timortech.imagecul.controller;

import com.timortech.imagecul.base.MessageResponse;
import com.timortech.imagecul.base.ResultResponse;
import com.timortech.imagecul.domain.LoginDomain;
import com.timortech.imagecul.domain.PasswordDomain;
import com.timortech.imagecul.domain.UserDomain;
import com.timortech.imagecul.entity.User;
import com.timortech.imagecul.service.UserService;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

/**
 * @author: loccen
 * @project: imagecul
 * @date: 2018/9/4
 * @time: 21:01
 * @desc：
 */

@RestController
@RequestMapping(value = "/user")
@Api(tags = "用户",description = "/user/*")
public class UserController {

	private final UserService userService;

	@Autowired
	public UserController(UserService userService) {
		this.userService = userService;
	}

	@PostMapping(value = "/register")
	@ApiOperation(value = "用户注册")
	public MessageResponse register(@RequestBody User user){
		userService.register(user);
		return MessageResponse.success();
	}

	@PostMapping(value = "/login")
	@ApiOperation(value = "用户登录")
	public ResultResponse<String> login(@RequestBody LoginDomain loginDomain){
		String token = userService.login(loginDomain);
		return new ResultResponse<>(token);
	}

	@PostMapping(value = "/change/psw")
	@ApiOperation(value = "密码修改")
	public MessageResponse changePsw(@RequestBody PasswordDomain passwordDomain){
		userService.changePsw(passwordDomain);
		return MessageResponse.success();
	}

	@GetMapping(value = "/get")
	@ApiOperation(value = "获取用户信息")
	public ResultResponse<UserDomain> get(){
		User user = userService.get();
		UserDomain userDomain = new UserDomain();
		BeanUtils.copyProperties(user,userDomain);
		return new ResultResponse<>(userDomain);
	}
}
